{"version":3,"sources":["Todo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newText","todo","text","editing","remove","id","checkToggle","setState","e","target","value","saveEditedValue","_this2","react_default","a","createElement","className","completed","onClick","checkTodoToggle","onDoubleClick","showEditForm","type","placeholder","onChange","getNewText","deleteTodo","React","Component","App","todos","newId","_this$state","toConsumableArray","concat","preventDefault","newTodos","filter","item","map","getNewValue","addTodo","src_Todo","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f95cfe84.chunk.js","sourcesContent":["import React from 'react';\n\nclass Todo extends React.Component {\n    constructor (props) {\n        super (props);\n\n        this.state = {\n            newText: props.todo.text,\n            editing: false,\n        }\n    }\n    \n    // 刪除\n    deleteTodo () {\n        this.props.remove(this.props.todo.id);\n    }\n\n    // 完成\n    checkTodoToggle () {\n        this.props.checkToggle(this.props.todo.id);\n    }\n\n    // 顯示編輯表單\n    showEditForm() {\n        const {editing} = this.state;\n\n        this.setState({\n            newText: this.props.todo.text,\n            editing: !editing,\n        });\n    }\n\n    // 取表單輸入內容\n    getNewText(e) {\n        const newText = e.target.value;\n\n        this.setState({\n            newText: newText,\n        });\n        \n    }\n    \n    // 儲存編輯資料\n    saveEditedValue() {\n        const {newText} = this.state;\n\n        this.props.saveEditedValue(this.props.todo.id, newText);\n        this.setState({\n            newText: this.props.todo.text,\n            editing: false,\n        });\n    }\n    \n\n    render () {\n        const {editing} = this.state;\n        const {todo} = this.props;\n        \n        //console.log(this.state)\n\n        return (\n            <li className={(todo.completed) ? \"list-group-item list-row done\" : \"list-group-item list-row\"}>\n                <div className=\"btn-circle checkbox\" onClick={() => this.checkTodoToggle()} >✓</div>\n                <div className=\"list-text\" onDoubleClick={() => this.showEditForm()}>\n                    {(editing) ? '' : todo.text}\n                    <div className={(editing) ? \"input-group\" : \"input-group hidden\"}>\n                        <input type=\"text\" className=\"form-control\" placeholder={todo.text} value={this.state.newText} onChange={(e) => this.getNewText(e)}/>\n                        <div className=\"input-group-append\" id=\"button-addon4\">\n                            <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => this.showEditForm()}>取消</button>\n                            <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => this.saveEditedValue()}>完成編輯</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"btn-circle delete\" onClick={() => this.deleteTodo()} >✕</div>\n            </li>\n        );\n    }\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nclass App extends React.Component {\n    constructor (props) {\n        super (props);\n\n        this.state = {\n            todos: [\n                {id: 1, text: '結衣超可愛', completed: false},\n                {id: 2, text: '顆顆', completed: true},\n                {id: 3, text: '嘻嘻', completed: false},\n            ],\n            newId: 4,\n            newText: '',\n        }\n    }\n    \n    // 取 todo 的內容\n    getNewValue (e) {\n        const newText = e.target.value;\n        \n        this.setState({\n            newText: newText,\n        });\n    }\n    \n\n    // 新增\n    addTodo (e) {\n        const {todos, newText, newId} = this.state;\n        \n        if (!newText) {\n            e.preventDefault();\n            return;\n        }\n        \n        this.setState({\n            todos: [\n                ...todos,\n                {id: newId, text: newText, completed: false}\n            ],\n            newId: newId +1,\n            newText: '',\n        });\n    }\n\n    // 刪除\n    deleteTodo (id) {\n        const {todos} = this.state;\n        \n        let newTodos = todos.filter((item) => item.id !== id);\n        \n        this.setState({\n            todos: newTodos,\n        });        \n    }\n\n    // 完成\n    checkTodoToggle (id) {\n        const {todos} = this.state;\n\n        let newTodos = todos.map((item) => {\n            if(item.id === id){\n                item.completed = !item.completed;\n            }\n            return item;\n        });\n        \n        this.setState({\n            todos: newTodos,\n        })\n    }\n\n\n    // 編輯\n    saveEditedValue(id, value) {\n        const {todos} = this.state;\n\n        let newTodos = todos.map((item) => {\n            if(item.id === id){\n                item.text = value;\n            }\n            return item;\n        });\n        \n        this.setState({\n            todos: newTodos,\n        })\n    }\n    \n\n\n    render () {\n        let {todos} = this.state;\n        \n        //console.log(todos)\n\n        return (\n            <div className=\"container\">\n                <div className=\"title\">\n                    <h1>Todo list</h1>\n                    <p>在待辦事項上點擊兩下滑鼠可以編輯</p>\n                </div>\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" className=\"form-control\" id=\"input-add\" placeholder=\"I'm gonna do...\"\n                        value={this.state.newText}\n                        onChange={(e) => this.getNewValue(e)} />\n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"btn btn-outline-secondary\"\n                            onClick={(e) => this.addTodo(e)}\n                        >add</button>\n                    </div>\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                    {todos.map((todo) =>\n                        <Todo\n                            key={todo.id}\n                            todo={todo}\n                            remove={(id) => this.deleteTodo(id)}\n                            checkToggle={(id) => this.checkTodoToggle(id)}\n                            saveEditedValue={(id, value) => this.saveEditedValue(id, value)}\n                        />\n                    )}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}